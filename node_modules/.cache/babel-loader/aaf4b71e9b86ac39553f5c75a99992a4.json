{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\admir\\\\Desktop\\\\LyricsFinder-ReactApp-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\admir\\\\Desktop\\\\LyricsFinder-ReactApp-master\\\\src\\\\components\\\\Tracks\\\\Lyrics.js\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Loader from \"../layout/Loader\";\nimport Moment from \"react-moment\";\nimport \"./Lyrics.scss\";\n\nconst Lyrics = () => {\n  const _useState = useState({\n    track: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        track = _useState2[0],\n        setTrack = _useState2[1];\n\n  const _useState3 = useState({\n    lyrics: \"\"\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lyrics = _useState4[0],\n        setLyrics = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isLoading = _useState6[0],\n        setIsLoading = _useState6[1];\n\n  let _useParams = useParams(),\n      id = _useParams.id;\n\n  useEffect(() => {\n    setIsLoading(false);\n    axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${id}&apikey=${process.env.REACT_APP_MM_KEY}`).then(respond => {\n      setLyrics({\n        lyrics: respond.data.message.body.lyrics\n      });\n      return axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${id}&apikey=${process.env.REACT_APP_MM_KEY}`);\n    }).then(respond => {\n      // this is for the second api call\n      setTrack({\n        track: respond.data.message.body.track\n      }, setIsLoading(true));\n    }).catch(err => console.log(\"err\", err));\n  }, []);\n\n  const _catch_genre = data => {\n    // music_genre sometimes is empty\n    if (data.lenght > 0) {\n      return data[0].music_genre.music_genre_name;\n    } else {\n      return \"Music\";\n    }\n  };\n\n  const _catch_lyrics = lyrics => {\n    try {\n      return lyrics.lyrics_body;\n    } catch {\n      return React.createElement(React.Fragment, null, React.createElement(\"i\", {\n        className: \"fa fa-binoculars\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), \" Oh No i think we need to pay for more lyrics -(-_-)-\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"index_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, isLoading ? React.createElement(\"div\", {\n    className: \"lyrics_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: \"back_btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-arrow-circle-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), \" Go Back\"), React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"card_head\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, track.track.track_name, \" by\", \" \", React.createElement(\"span\", {\n    className: \"span_text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, track.track.artist_name)), React.createElement(\"div\", {\n    className: \"card_body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"card_lyrics\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, _catch_lyrics(lyrics.lyrics)))), React.createElement(\"ul\", {\n    className: \"list_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"list_items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Album ID\"), \": \", track.track.album_id), React.createElement(\"li\", {\n    className: \"list_items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Song Genre\"), \":\", \" \", track.track && _catch_genre(track.track.primary_genres.music_genre_list)), React.createElement(\"li\", {\n    className: \"list_items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Explicit Words\"), \":\", \" \", track.track.explicit === 0 ? \"No\" : \"Yes\"), React.createElement(\"li\", {\n    className: \"list_items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Release Date\"), \":\", \" \", React.createElement(Moment, {\n    format: \"MM/DD/YYYY\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, track.track.updated_time))))) : React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }));\n};\n\nexport default Lyrics;","map":{"version":3,"sources":["C:/Users/admir/Desktop/LyricsFinder-ReactApp-master/src/components/Tracks/Lyrics.js"],"names":["React","useState","useEffect","Fragment","axios","useParams","Link","Loader","Moment","Lyrics","track","setTrack","lyrics","setLyrics","isLoading","setIsLoading","id","get","process","env","REACT_APP_MM_KEY","then","respond","data","message","body","catch","err","console","log","_catch_genre","lenght","music_genre","music_genre_name","_catch_lyrics","lyrics_body","track_name","artist_name","album_id","primary_genres","music_genre_list","explicit","updated_time"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Loader from \"../layout/Loader\";\nimport Moment from \"react-moment\";\nimport \"./Lyrics.scss\";\n\nconst Lyrics = () => {\n  const [track, setTrack] = useState({ track: \"\" });\n  const [lyrics, setLyrics] = useState({ lyrics: \"\" });\n  const [isLoading, setIsLoading] = useState(false);\n\n  let { id } = useParams();\n\n  useEffect(() => {\n    setIsLoading(false);\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${id}&apikey=${process.env.REACT_APP_MM_KEY}`\n      )\n      .then(respond => {\n        setLyrics({ lyrics: respond.data.message.body.lyrics });\n\n        return axios.get(\n          `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${id}&apikey=${process.env.REACT_APP_MM_KEY}`\n        );\n      })\n      .then(respond => {\n        // this is for the second api call\n        setTrack(\n          { track: respond.data.message.body.track },\n          setIsLoading(true)\n        );\n      })\n      .catch(err => console.log(\"err\", err));\n  }, []);\n\n  const _catch_genre = data => {\n    // music_genre sometimes is empty\n    if (data.lenght > 0) {\n      return data[0].music_genre.music_genre_name;\n    } else {\n      return \"Music\";\n    }\n  };\n\n  const _catch_lyrics = lyrics => {\n    try {\n      return lyrics.lyrics_body;\n    } catch {\n      return (\n        <>\n          <i className=\"fa fa-binoculars\"></i> Oh No i think we need to pay for\n          more lyrics -(-_-)-\n        </>\n      );\n    }\n  };\n\n  return (\n    <div className=\"index_container\">\n      {isLoading ? (\n        <div className=\"lyrics_container\">\n          <Link to=\"/\" className=\"back_btn\">\n            <i className=\"fa fa-arrow-circle-left\"></i> Go Back\n          </Link>\n          <Fragment>\n            <div className=\"card\">\n              <h4 className=\"card_head\">\n                {track.track.track_name} by{\" \"}\n                <span className=\"span_text\">{track.track.artist_name}</span>\n              </h4>\n              <div className=\"card_body\">\n                <p className=\"card_lyrics\">{_catch_lyrics(lyrics.lyrics)}</p>\n              </div>\n            </div>\n            <ul className=\"list_container\">\n              <li className=\"list_items\">\n                <strong>Album ID</strong>: {track.track.album_id}\n              </li>\n              <li className=\"list_items\">\n                <strong>Song Genre</strong>:{\" \"}\n                {track.track &&\n                  _catch_genre(track.track.primary_genres.music_genre_list)}\n              </li>\n              <li className=\"list_items\">\n                <strong>Explicit Words</strong>:{\" \"}\n                {track.track.explicit === 0 ? \"No\" : \"Yes\"}\n              </li>\n              <li className=\"list_items\">\n                <strong>Release Date</strong>:{\" \"}\n                <Moment format=\"MM/DD/YYYY\">{track.track.updated_time}</Moment>\n              </li>\n            </ul>\n          </Fragment>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n\nexport default Lyrics;\n"]},"metadata":{},"sourceType":"module"}