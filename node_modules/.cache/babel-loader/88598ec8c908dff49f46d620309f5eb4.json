{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\admir\\\\Desktop\\\\Lyricfinder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\admir\\\\Desktop\\\\Lyricfinder\\\\src\\\\context.js\";\nimport React, { useState, createContext, useEffect } from \"react\";\nimport axios from \"axios\";\nexport const TrackContext = createContext();\nexport const ListProvider = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        trackList = _useState2[0],\n        setTrackList = _useState2[1];\n\n  const _useState3 = useState({\n    id: \"ca\",\n    value: \"UNITED STATES\"\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        country = _useState4[0],\n        setCountry = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isLoading = _useState6[0],\n        setIsLoading = _useState6[1];\n\n  const _useState7 = useState(`Top 10 Tracks in ${country.value}`),\n        _useState8 = _slicedToArray(_useState7, 2),\n        heading = _useState8[0],\n        setHeading = _useState8[1];\n\n  const hundleCountry = e => {\n    setCountry(e);\n    setHeading(`Top 10 Tracks in ${e.value}`);\n  };\n\n  useEffect(() => {\n    setIsLoading(false);\n    axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=${country.id}&f_has_lyrics=1&apikey=${process.env.REACT_APP_MM_KEY}`).then(respond => {\n      setTrackList([...respond.data.message.body.track_list], setIsLoading(true));\n    }).catch(err => console.log(\"err\", err));\n  }, [country]);\n  return React.createElement(TrackContext.Provider, {\n    value: {\n      trackList,\n      heading,\n      hundleCountry,\n      isLoading,\n      setTrackList,\n      setHeading\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["C:/Users/admir/Desktop/Lyricfinder/src/context.js"],"names":["React","useState","createContext","useEffect","axios","TrackContext","ListProvider","props","trackList","setTrackList","id","value","country","setCountry","isLoading","setIsLoading","heading","setHeading","hundleCountry","e","get","process","env","REACT_APP_MM_KEY","then","respond","data","message","body","track_list","catch","err","console","log","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAGH,aAAa,EAAlC;AAEP,OAAO,MAAMI,YAAY,GAAGC,KAAK,IAAI;AAAA,oBACDN,QAAQ,CAAC,EAAD,CADP;AAAA;AAAA,QAC5BO,SAD4B;AAAA,QACjBC,YADiB;;AAAA,qBAELR,QAAQ,CAAC;AAAES,IAAAA,EAAE,EAAE,IAAN;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAAD,CAFH;AAAA;AAAA,QAE5BC,OAF4B;AAAA,QAEnBC,UAFmB;;AAAA,qBAGDZ,QAAQ,CAAC,KAAD,CAHP;AAAA;AAAA,QAG5Ba,SAH4B;AAAA,QAGjBC,YAHiB;;AAAA,qBAKLd,QAAQ,CAAE,oBAAmBW,OAAO,CAACD,KAAM,EAAnC,CALH;AAAA;AAAA,QAK5BK,OAL4B;AAAA,QAKnBC,UALmB;;AAOnC,QAAMC,aAAa,GAAGC,CAAC,IAAI;AACzBN,IAAAA,UAAU,CAACM,CAAD,CAAV;AACAF,IAAAA,UAAU,CAAE,oBAAmBE,CAAC,CAACR,KAAM,EAA7B,CAAV;AACD,GAHD;;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAX,IAAAA,KAAK,CACFgB,GADH,CAEK,qIAAoIR,OAAO,CAACF,EAAG,0BAAyBW,OAAO,CAACC,GAAR,CAAYC,gBAAiB,EAF1M,EAIGC,IAJH,CAIQC,OAAO,IAAI;AACfhB,MAAAA,YAAY,CACV,CAAC,GAAGgB,OAAO,CAACC,IAAR,CAAaC,OAAb,CAAqBC,IAArB,CAA0BC,UAA9B,CADU,EAEVd,YAAY,CAAC,IAAD,CAFF,CAAZ;AAID,KATH,EAUGe,KAVH,CAUSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB,CAVhB;AAWD,GAbQ,EAaN,CAACnB,OAAD,CAbM,CAAT;AAgBA,SACE,oBAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,SADK;AAELQ,MAAAA,OAFK;AAGLE,MAAAA,aAHK;AAILJ,MAAAA,SAJK;AAKLL,MAAAA,YALK;AAMLQ,MAAAA;AANK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGV,KAAK,CAAC2B,QAVT,CADF;AAcD,CA1CM","sourcesContent":["import React, { useState, createContext, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport const TrackContext = createContext();\n\nexport const ListProvider = props => {\n  const [trackList, setTrackList] = useState([]);\n  const [country, setCountry] = useState({ id: \"ca\", value: \"UNITED STATES\" });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [heading, setHeading] = useState(`Top 10 Tracks in ${country.value}`);\n\n  const hundleCountry = e => {\n    setCountry(e);\n    setHeading(`Top 10 Tracks in ${e.value}`);\n  };\n\n  useEffect(() => {\n    setIsLoading(false);\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=${country.id}&f_has_lyrics=1&apikey=${process.env.REACT_APP_MM_KEY}`\n      )\n      .then(respond => {\n        setTrackList(\n          [...respond.data.message.body.track_list],\n          setIsLoading(true)\n        );\n      })\n      .catch(err => console.log(\"err\", err));\n  }, [country]);\n\n\n  return (\n    <TrackContext.Provider\n      value={{\n        trackList,\n        heading,\n        hundleCountry,\n        isLoading,\n        setTrackList,\n        setHeading\n      }}\n    >\n      {props.children}\n    </TrackContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}